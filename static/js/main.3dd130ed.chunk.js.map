{"version":3,"sources":["assets/images/Image_not_available.png","components/CardList.js","components/SearchBox.js","modules/window-dimensions.js","components/Scroll.js","components/Selection.js","repositories/univesal-tutorial-repo.js","components/ErrorBoundary.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["CardList","countries","imageSize","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","getWindowDimensions","window","width","innerWidth","height","innerHeight","Scroll","props","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","style","overflow","border","children","Selection","list","defaultValue","rest","Form","Select","map","item","value","title","API_UNIVERSAL_AUTH_TOKEN","UniversalTutorialRepository","axios","get","headers","then","response","data","sessionStorage","getItem","ErrorBoundary","state","hasError","error","info","this","Component","DEFAULT_IMAGE_SIZE","App","onSearchChange","event","setState","target","onSizeChange","getAccessToken","setItem","auth_token","getCountries","filteredCountries","filter","country","country_name","toLowerCase","includes","length","textAlign","justifyContent","Boolean","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dd130ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Image_not_available.340253f9.png\";","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ countries, imageSize }) => {\n  if (true) {\n    throw  new Error('NOOO')\n  }\n  return (\n    <div>\n      {\n        countries.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              imageSize = {imageSize}\n              name={countries[i].country_name}\n              shortName={countries[i].country_short_name}\n\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search countries'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import {useState, useEffect} from 'react'\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport const useWindowDimensions = () => {\r\n   const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n\r\n}","import React from 'react';\nimport {useWindowDimensions} from '../modules/window-dimensions'\n\nconst Scroll = (props) => {\n    const { height, width } = useWindowDimensions();\n\n  return (\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: height - 200, }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","\r\nimport {Form} from 'react-bootstrap'\r\n\r\nconst Selection = ({ list = [], defaultValue, onChange, ...rest }) => {\r\n    return (\r\n        <Form.Select aria-label=\"Default select example\" defaultValue={defaultValue} onChange={onChange}{...rest}>\r\n            {list.map(item => {\r\n                return <option key ={item.value}  value={item.value} > {item.title }</option>\r\n            })}\r\n\r\n</Form.Select>\r\n    )\r\n}\r\nexport default Selection","import axios from 'axios';\r\n\r\nconst TOKEN = 'YH3VyqLiNTTQAX17wgRw5hOb_9YyqMM6jqcOnmWXc2ypIIOx6uhAqCK5QiW-RMGjU-s'\r\nexport const API_UNIVERSAL_AUTH_TOKEN = 'apiUneversalAuthToken';\r\nexport class UniversalTutorialRepository {\r\n    static getAccessToken() {\r\n        return axios.get('https://www.universal-tutorial.com/api/getaccesstoken', {\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"api-token\": TOKEN,\r\n                \"user-email\": \"elvinahmadov0@gmail.com\"\r\n            }\r\n        }).then(response=>response.data)\r\n    }\r\n\r\n    static getCountries() {\r\n        return axios.get('https://www.universal-tutorial.com/api/countries/', {\r\n            headers: {\r\n                  \"Authorization\": `Bearer ${sessionStorage.getItem(API_UNIVERSAL_AUTH_TOKEN)}`,\r\n            \"Accept\": \"application/json\"\r\n            }\r\n        }).then(response=>response.data)\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.state({hasError:true})\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.hasError) {\r\n             return <h1>Oooops. That is not good! </h1>\r\n        }\r\n        return this.props.children\r\n        }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport Selection from '../components/Selection';\nimport './App.css';\nimport { UniversalTutorialRepository, API_UNIVERSAL_AUTH_TOKEN } from '../repositories/univesal-tutorial-repo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst DEFAULT_IMAGE_SIZE = '32x24';\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcountries: [],\n\t\t\tsearchfield: '',\n\t\t\timageSize: DEFAULT_IMAGE_SIZE\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tUniversalTutorialRepository.getAccessToken()\n\t\t\t.then(response => {\n\t\t\t\tsessionStorage.setItem(API_UNIVERSAL_AUTH_TOKEN, response.auth_token);\n\t\t\t})\n\t\t\t.then(() =>\n\t\t\t\tUniversalTutorialRepository.getCountries().then(response => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcountries: response\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\tonSearchChange = event => {\n\t\tthis.setState({ searchfield: event.target.value });\n\t};\n\tonSizeChange = event => {\n\t\tthis.setState({ imageSize: event.target.value });\n\t};\n\n\trender() {\n\t\tconst { countries, searchfield } = this.state;\n\n\t\tconst filteredCountries = countries.filter(country => {\n\t\t\treturn country.country_name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\treturn !countries.length ? (\n\t\t\t<h1>Loading</h1>\n\t\t) : (\n\t\t\t<div className=\"tc\">\n\t\t\t\t<div className=\"sticky\">\n\t\t\t\t\t<h1 className=\"f1\">Countries</h1>\n\n\t\t\t\t\t<div className=\"wrapper \">\n\t\t\t\t\t\t<Selection\n\t\t\t\t\t\t\tlist={[\n\t\t\t\t\t\t\t\t{ value: '16x12', title: '16x12' },\n\t\t\t\t\t\t\t\t{ value: '32x24', title: '32x24' },\n\t\t\t\t\t\t\t\t{ value: '64x48', title: '64x48' },\n\t\t\t\t\t\t\t\t{ value: '128x96', title: '128x96' },\n\t\t\t\t\t\t\t\t{ value: '256x192', title: '256x192' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tdefaultValue={DEFAULT_IMAGE_SIZE}\n\t\t\t\t\t\t\tonChange={this.onSizeChange}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '150px',\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName=\" b--green bg-lightest-blue\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList countries={filteredCountries} imageSize={this.state.imageSize} />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons'; \n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}